{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","ErrorBoundary.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","ErrorBoundary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA2BF,EAA3B,YAAyCG,IAAI,WACrD,gCACE,6BAAKL,IACL,4BAAIC,WCaGK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,mCAEEA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCCZS,EAXG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,aACnB,OACE,qBAAKT,UAAW,oCAAhB,SACE,uBAAOU,KAAK,SACZC,YAAc,gBACdC,SAAYH,OCiBHI,E,kDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,sDAEFG,KAAKL,MAAMO,a,GAhBKC,aCSZC,EAVA,SAACT,GACd,OACE,qBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGb,EAAMO,YCmDEO,G,wDA9Cb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKV,SAAS,CAAEW,YAAaD,EAAME,OAAOC,SAb1C,EAAKlB,MAAQ,CACXX,OAAQ,GACR2B,YAAa,IAJJ,E,qDAQb,WAAqB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKlB,SAAS,CAAEhB,OAAQkC,S,oBAOzC,WACE,MAAgCnB,KAAKJ,MAA7BX,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,oBAAoBC,SAASZ,EAAYW,wBAG7D,OAAKtC,EAAOwC,OAKR,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcU,KAAKU,iBAC9B,cAAC,EAAD,UACE,cAACgB,EAAD,UACE,cAAC,EAAD,CAAUzC,OAAQmC,WATnB,gD,GA1BKjB,cCIHwB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbe8af2b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src ={`https://robohash.org/${id}?200x200`} alt='robots'/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n  return (\n    <>\n      {\n      robots.map((user, i) => {\n        return (\n          <Card \n            key={robots[i].id} \n            id={robots[i].id} \n            name ={robots[i].name} \n            email={robots[i].email}/>\n        )\n      })\n    } \n    </>\n  )\n}\n\nexport default CardList;\n\n","const SearchBox = ({ searchChange}) =>{\n  return (\n    <div className= 'pa3 ba b--black bg lightest-blue '>\n      <input type='search'\n      placeholder = 'search robots'\n      onChange = {searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooooops. not good :(</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n      {props.children}\n    </div>\n    \n  )\n};\n\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport ErrorBoundary from './ErrorBoundary';\nimport Scroll from './components/Scroll';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ robots: users}));\n  }\n  \n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n\n  } \n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\n    })\n\n    if (!robots.length) {\n      return <h1>Loading...</h1>\n    }\n    else {\n      return (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      )\n    }\n  }\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}